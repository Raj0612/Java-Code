package com.datastructures.trees.binarytrees;

import java.util.ArrayList;


//L -> R -> N
public class BinaryTreePostOrderTraversal {
    public static void main(String[] args) {
         /*     1
              / \
             2   3
            /\   / \
           4  5  6  7
          /          \
         8            15
         */

         /*      1
              /    \
             2       3
            /\      /  \
          4   5    6    7
        / \   /\  / \   / \
       8  9 10 11 12 13 14 15
         */
       // TreeNode root = BinaryTree.constructTree();
        TreeNode root = BinaryTree.constructTree1();
        //TreeNode root = BinaryTree.constructTree2();
        ArrayList<Integer> list = new ArrayList<>();
        postOrderTraversal(root, list);
        System.out.println("Result " + list);
    }

    static void postOrderTraversal(TreeNode root, ArrayList list){
        if(root==null){
            return;
        }
        postOrderTraversal(root.left, list);
        postOrderTraversal(root.right, list);
        list.add(root.value);
    }
}
