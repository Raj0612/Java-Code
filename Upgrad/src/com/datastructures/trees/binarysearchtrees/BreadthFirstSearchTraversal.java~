package com.datastructures.trees.binarysearchtrees;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

import com.datastructures.trees.binarysearchtrees.BinarySearchTree.TreeNode;

public class BreadthFirstSearchTraversal {
    static TreeNode root;
    public static void main(String[] args) {
        BinarySearchTree tree = BinarySearchTree.constructTree();
        root = tree.root;
        System.out.println("BFS " + BFS() );
    }

    public static ArrayList<Integer> BFS(){
      //  Node currentNode = root;
        Queue<TreeNode> queue = new LinkedList<>();
        ArrayList<Integer> results = new ArrayList<>();
        if(root ==null)
            return results;
        queue.add(root);
        while(!queue.isEmpty()){
            TreeNode currentNode = queue.remove();
            results.add(currentNode.value);
            if(currentNode.left!=null)
                queue.add(currentNode.left);
            if(currentNode.right!=null)
                queue.add(currentNode.right);
        }
    return results;
    }
}
